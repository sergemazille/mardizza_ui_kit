{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/script/Form.js","src/script/Pagination.js","src/script/Styleguide.js","src/script/main.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class Form {\n\n    // launch class methods\n    static init() {\n        this.dropdown();\n    }\n\n    static dropdown() {\n        let dropdownTriggers = document.querySelectorAll('.dropdown-trigger');\n        dropdownTriggers.forEach(function(button) {\n\n            // trigger event\n            let $dropdownList = button.parentElement.querySelector('.dropdown-list');\n            let dropdownActive = false;\n\n            button.addEventListener(\"click\", function(e) {\n                e.preventDefault();\n                $dropdownList.style.display = ($dropdownList.style.display == \"\") ? \"block\" : \"\";\n                dropdownActive = $dropdownList.style.display == \"block\";\n\n                // create a clickable `div` to close the dropdown when user clicks outside of the dropdown element\n                if(dropdownActive) {\n                    let $clickable = document.createElement('div');\n                    $clickable.className = \"backdrop\";\n\n                    let $body = document.querySelector('body');\n                    $body.appendChild($clickable);\n\n                    $clickable.addEventListener(\"click\", function() {\n                        $dropdownList.style.display = \"\";\n                        dropdownActive = false;\n                        $clickable.removeEventListener(\"click\", this);\n                        this.remove();\n                    });\n                }\n            });\n\n            // choice event\n            $dropdownList.querySelectorAll('a').forEach(function(anchor) {\n                anchor.addEventListener(\"click\", function(e) {\n                    e.preventDefault();\n                    let selectionOption = anchor.text;\n\n                    // cleanup previously selected list item (remove active class)\n                    let $currentActiveListItem = $dropdownList.querySelector('li.active');\n                    $currentActiveListItem.classList.remove('active');\n\n                    // select clicked list item by giving it `active` class and changing button label text\n                    anchor.parentElement.classList.add('active');\n                    button.innerHTML = selectionOption;\n\n                    // close the dropdown-list\n                    $dropdownList.style.display = \"\";\n\n                    // cleanup : remove opened backdrop\n                    let $backdrop = document.querySelector('.backdrop');\n                    $backdrop.remove();\n                });\n            });\n        });\n    }\n}\n","export class Pagination {\r\n\r\n    // launch class methods\r\n    static init() {\r\n        this.pagination();\r\n    }\r\n\r\n    static pagination() {\r\n        let pagination = document.querySelector('pagination');\r\n\r\n        // step 1: remove unnecessary items\r\n\r\n        // step 1a: keep first and last two items\r\n\r\n\r\n\r\n        // replace 'ellipsis' class list item content with 3 dots\r\n        let ellipsisItems = document.querySelectorAll('li.ellipsis');\r\n        ellipsisItems.forEach(function(item) {\r\n            item.querySelector('a').textContent = \"...\";\r\n        });\r\n    }\r\n}","export class Styleguide {\r\n    static init() {\r\n        let testButtons = document.querySelectorAll('.states-input-buttons button');\r\n        testButtons.forEach(function(button) {\r\n\r\n            button.addEventListener('click', function(e) {\r\n                e.preventDefault();\r\n\r\n                let feedbackText = this.dataset.text;\r\n                let action = this.dataset.action;\r\n                let inputGroup = this.parentElement.parentElement;\r\n\r\n                switch(action) {\r\n                    case \"disabled\":\r\n                        disable(this);\r\n                        break;\r\n                    case \"reset\":\r\n                        reset();\r\n                        break;\r\n                    default:\r\n                        state();\r\n                        break;\r\n                }\r\n\r\n                // disable button\r\n                function disable(button) {\r\n                    let input = inputGroup.querySelector('input');\r\n\r\n                    input.disabled = !input.disabled;\r\n                    if(input.disabled) {\r\n                        button.innerHTML = \"Enable me\";\r\n                    } else {\r\n                        button.innerHTML = \"Disable me\";\r\n                    }\r\n                }\r\n\r\n                // reset state\r\n                function reset() {\r\n                    let disableButton = inputGroup.querySelector('.btn-grey');\r\n\r\n                    // cleanup potentially disabled state\r\n                    inputGroup.querySelector('input').disabled = false;\r\n                    disableButton.innerHTML = \"Disable me\";\r\n\r\n                    // remove states classes\r\n                    inputGroup.className = \"input-group\";\r\n\r\n                    // remove feedback state if exists\r\n                    inputGroup.querySelector('.feedback') ? inputGroup.querySelector('.feedback').remove() : null;\r\n                }\r\n\r\n                // change input state feedback\r\n                function state() {\r\n                    // clean up in case the input has been disabled\r\n                    inputGroup.querySelector('input').disabled = false;\r\n\r\n                    // add new class to input-group\r\n                    inputGroup.className = \"input-group \" + action;\r\n\r\n                    // replace the feedback span or create one\r\n                    let feedbackSpan = inputGroup.querySelector('.feedback');\r\n                    if(! feedbackSpan) {\r\n                        feedbackSpan = document.createElement('span');\r\n                        feedbackSpan.className = \"feedback\";\r\n                    }\r\n\r\n                    feedbackSpan.textContent = feedbackText;\r\n                    inputGroup.insertBefore(feedbackSpan, inputGroup.querySelector('.states-input-buttons'));\r\n                }\r\n            });\r\n        });\r\n    }\r\n}","import { Form } from './Form';\nimport { Pagination } from './Pagination';\n\n// styleguide custom examples\nimport { Styleguide } from './Styleguide';\n\nwindow.onload = function() {\n\n    Form.init();\n    Pagination.init();\n\n    // styleguide custom examples\n    Styleguide.init();\n};"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}