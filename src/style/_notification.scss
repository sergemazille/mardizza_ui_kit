/////////////////////////////////////////////////////////////
// Mixins

@mixin notification($color, $icon) {
    $color-dark: darken($color, 20%);

    color: $color-dark;
    border: 1px solid $color-dark;
    border-radius: $radius;
    background-color: mix(transparentize($color, .07), $grey-light, 50%);
    padding: 1em 3em 1em 1em;
    line-height: 1.5;
    position: relative;
    box-shadow: 3px 3px 6px rgba(0,0,0,.25);

    &:before {
        content: $icon;
        font-family: $font-family-icon;
        font-size: 1.7em;
        line-height: .5;
        vertical-align: -40%; // compensate bigger font-size
        margin-right: .35em;
    }

    &:after {
        content: $icon-cross;
        font-family: $font-family-icon;
        font-size: 1em;
        font-weight: 400;
        position: absolute;
        top: .5em;
        right: .5em;
    }

    &:hover {
        cursor: pointer;
        border-color: darken($color-dark, 15%);
    }

    &:hover:after { font-weight: 700; }
}

/////////////////////////////////////////////////////////////
// Classes

.notification-success { @include notification($success, $icon-success); }
.notification-info { @include notification($info, $icon-info); }
.notification-warning { @include notification($warning, $icon-warning); }
.notification-error { @include notification($error, $icon-alert); }

#notification-container {
    position: fixed;
    top: 1em;
    z-index: 3;
    display: flex;
    flex-direction: column;

    [class*="notification-"] {
        margin: 0 auto 6px 0;
        opacity: 0;
        left: 0;
        transition: opacity .8s, left 0s .8s; // opacity alone doesn't work so 'left' is also targeted (but delayed so transition isn't seen)

        &.in {
            opacity: 1;
            left: 1.5em;
            transition: opacity .8s ease, left .4s ease;
        }

        a {
            color: inherit;
            font-style: italic;
            font-weight: $font-weight-semi-bold;
            text-decoration: underline;
        }
    }
}